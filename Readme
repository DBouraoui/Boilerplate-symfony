### bundle disponible:
-jwtlexikBundle
-messenger
-makerbundle (dev)
-doctrine
-serializer
-validator
-Symfony Uuid
-symfony/rate-limiter
-mailer (google mailer default not use in prod)
-phpstan
-league/flysystem-bundle
-symfony/twig-bundle
-test pack (phpunit) {
  * Write test cases in the tests/ folder
  * Use MakerBundle's make:test command as a shortcut!
  * Run the tests with php bin/phpunit
}

### Etape d'installation du boilerplate:
php bin/console lexik:jwt:generate-keypair
copier .env en .env.local

###makefile :
dev -> lance le dev  (adminer, server, postgres)
prod -> lance la prod (adminer, server, postgres, grafana)
down -> Stop le docker et clear les logs
check -> lance phpstan pour vérifier le code

### Config
Pour activer le https -> enlever les variables d'environments dans le compose.yml dans le service php et l'app s'executeras en https://localhost au lieux de http://localhost:8000

### Capaciter :
-Inscription d'utilisateur (email, mot de passe) -> envoie d'email d'inscription.
-Connexion de l'utilisateur via sont email et mot de passe -> Log de connexion dans la table session.


### Info
-Rate limiteur pour l'inscription et la connexion.
-Utilisation des Event et EventSubscriber pour les emails, ratelimiter, logs de session.
-Utilisation de messenger pour envoyer les emails en asynchrone. (make consume).
-Utilisation de DTOs pour créer mapper les request et valider les donner grace aux assertions via le service utilitaire.
